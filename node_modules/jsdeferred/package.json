{
  "name": "jsdeferred",
  "repository": {
    "url": "git://github.com/cho45/jsdeferred.git",
    "type": "git"
  },
  "directories": {
    "doc": "./doc"
  },
  "author": {
    "name": "cho45",
    "email": "cho45@lowreal.net",
    "url": "http://www.lowreal.net/"
  },
  "version": "0.4.0",
  "licenses": [
    {
      "url": "http://github.com/cho45/jsdeferred/blob/master/jsdeferred.js",
      "type": "MIT"
    }
  ],
  "main": "jsdeferred",
  "homepage": "http://github.com/cho45/jsdeferred",
  "description": "Asynchronous library in JavaScript. Standalone and Compact.",
  "bugs": {
    "url": "http://github.com/cho45/jsdeferred/issues"
  },
  "readme": "JSDeferred\n==========\n\n![JSDeferred Structure]( http://f.hatena.ne.jp/images/fotolife/c/cho45/20071208/20071208021643.png )\n\nSimple and clean asynchronous processing.\n\n\nSample\n------\n\n[JSDeferred Samples]( http://cho45.stfuawsc.com/jsdeferred/sample.html )\n\n\nDownload\n--------\n\n * [jsdeferred.js]( http://github.com/cho45/jsdeferred/raw/master/jsdeferred.js )\n * No comments: [jsdeferred.nodoc.js]( http://github.com/cho45/jsdeferred/raw/master/jsdeferred.nodoc.js )\n * Compressed: [jsdeferred.mini.js]( http://github.com/cho45/jsdeferred/raw/master/jsdeferred.mini.js )\n * With jQuery supports: [jsdeferred.jquery.js]( http://github.com/cho45/jsdeferred/raw/master/jsdeferred.jquery.js )\n\nRepository:\n\n\tgit clone git://github.com/cho45/jsdeferred.git\n\nFor userscript\n--------------\n\nCopy and paste following at end of your userscript:\n\n * [jsdeferred.userscript.js]( http://github.com/cho45/jsdeferred/raw/master/jsdeferred.userscript.js )\n\nExample:\n\n\twith (D()) {\n\t\n\tnext(fun...);\n\t\n\t// normal xhr\n\thttp.get(\"...\").\n\tnext(fun...);\n\t\n\t// cross site\n\txhttp.get(\"...\").\n\tnext(fun...);\n\t\n\t}\n\t\n\t// pasted code\n\tfunction D () {\n\t...JSDeferred...\n\t}\n\nSee [binding/userscript.js]( http://github.com/cho45/jsdeferred/raw/master/binding/userscript.js )\nto get more information of utility functions (http.get/xhttp.get)\n\nDocumentation\n-------------\n\nSee source.\n\n## Introduction ##\n\n * [doc/intro.html (Japanese)]( http://cho45.stfuawsc.com/jsdeferred/doc/intro.html )\n * [doc/intro.en.html (English)]( http://cho45.stfuawsc.com/jsdeferred/doc/intro.en.html )\n\n[doc/index.html]( http://cho45.stfuawsc.com/jsdeferred/doc/index.html )\n\nTests\n-----\n\n[test.html]( http://cho45.stfuawsc.com/jsdeferred/test.html )\n\nLicense\n-------\n\nCopyright 2007-2009 cho45 &lt;cho45@lowreal.net&gt;\n\nMIT. See header of [jsdeferred.js]( http://github.com/cho45/jsdeferred/raw/master/jsdeferred.js )\n\nConcept\n-------\n\n * Compact\n * Greasemonkey friendly (standalone and compact...)\n * Method chain\n * Short and meaning function names\n * Useful shorthand ways\n\nInternal\n--------\n\nThis sections use some words as following meanings.\n\n chain::\n    a sequence of processes.\n child::\n    the Deferred which returns from a callback.\n Deferred#foobar::\n    Deferred.prototype.foobar\n\n### Deferred structure and chain structure ###\n\nA Deferred object has only one callback as its process. Deferred object packages a process (function) as callback and has reference to next Deferred (this is thought like continuation).\n\nExample for understanding Deferred structure.\n\n\tvar d1 = new Deferred();\n\td1.callback.ok = function () {\n\t\talert(\"1\");\n\t};\n\t\n\tvar d2 = new Deferred();\n\td2.callback.ok = function () {\n\t\talert(\"2\");\n\t};\n\t\n\t// Set d2 as continuation of d1.\n\td1._next = d2;\n\t\n\t// Invoke the chain.\n\td1.call();\n\nAnd example for usual use.\n\n\tnext(function () { // this `next` is global function\n\t\talert(\"1\");\n\t}).\n\tnext(function () { // this `next` is Deferred#next\n\t\talert(\"2\");\n\t}).\n\tnext(function () {\n\t\talert(\"3\");\n\t});\n\nDeferred#next creates new Deferred, sets the passed functions to process of it, sets it as continuation of `this` and returns it.\n\n\nThis structure makes easy to chain child Deferreds.\n\n\tnext(function () {\n\t\talert(\"1\");\n\t}).\n\tnext(function () {\n\t\talert(\"2\");\n\t\t// child Deferred\n\t\treturn next(function () {\n\t\t\talert(\"3\");\n\t\t});\n\t}).\n\tnext(function () {\n\t\talert(\"4\");\n\t});\n\nWhen the callback returns Deferred, the Deferred calling the callback only sets its continuation (`_next`) to returned Deferred's continuation.\n\n\tnext(function () {\n\t\talert(\"1\");\n\t}).\n\tnext(function () {\n\t\talert(\"2\");\n\t\tvar d = next(function () {\n\t\t\talert(\"3\");\n\t\t});\n\t\td._next = this._next;\n\t\tthis.cancel();\n\t}).\n\tnext(function () {\n\t\talert(\"4\");\n\t});\n\nAfter the process, above code is same as following:\n\n\tnext(function () {\n\t\talert(\"1\");\n\t}).\n\tnext(function () {\n\t\talert(\"2\");\n\t\tnext(function () {\n\t\t\talert(\"3\");\n\t\t}).\n\t\tnext(function () {\n\t\t\talert(\"4\");\n\t\t});\n\t});\n\n![Chain child deferred]( http://f.hatena.ne.jp/images/fotolife/c/cho45/20071207/20071207014817.png )\n\n### Error processing and recovering ###\n\nA Deferred has also error-back for error processing. Let's just see an example (this is from test):\n\n\tnext(function () {\n\t\tthrow \"Error\";\n\t}).\n\terror(function (e) {\n\t\texpect(\"Errorback called\", \"Error\", e);\n\t\treturn e; // recovering error\n\t}).\n\tnext(function (e) {\n\t\texpect(\"Callback called\", \"Error\", e);\n\t\tthrow \"Error2\";\n\t}).\n\tnext(function (e) {\n\t\t// This process is not called because\n\t\t// the error is not recovered.\n\t\tng(\"Must not be called!!\");\n\t}).\n\terror(function (e) {\n\t\texpect(\"Errorback called\", \"Error2\", e);\n\t});\n\nThe error thrown in callback is propagated by error-back chain. If the error-back returns normal value, the error is considered as recovery, and the callback chain continues.\n\n### Difference between MochiKit and JSDeferred ###\n\nJSDeferred is inspired by MochiKit Deferred object, so both is similar but JSDeferred drops some functions and simplified it.\n\n * MochiKit Deferred has chain by Array. JSDeferred has chain by chain of Deferred.\n * MochiKit Deferred separates parent chain and child chain, JSDeferred not.\n\n## Comparison of other deferred-like objects ##\n\n### vs [jQuery's Deferred]( http://api.jquery.com/category/deferred-object/ )\n\n *  Bad: Not supports child deferred\n *  Bad: No utility functions\n *  Good: Simple\n *  Good: Cache result (it can be called after completed the task)\n *  Good: jQuery embed (no more dependencies and compact)\n\n### vs [Dojo's Deferred]( http://docs.dojocampus.org/dojo/Deferred )\n\n *  Bad: Not supports child deferred\n *  Bad: Very heavy dependencies for dojo\n *  Good: Support progress\n\n### vs [CommonJS's Promise]( http://wiki.commonjs.org/wiki/Promises )\n\n *  Bad: Not implemeneted?\n *  Bad: Not supports child deferred\n *  Bad: Too complex\n *  Good: Highlier functional\n\n## Different-origin Deferred instances\n\nJSDeferred can be used in inter-environment which is independent respectively like browser extension\nbecause JSDeferred determines a self-class identity by instance id.\n\nAuthor\n-------\n\nCopyright 2007-2009 cho45 &lt;cho45@lowreal.net&gt;\n\n * Portfolio: [www.lowreal.net]( http://www.lowreal.net/ )\n * Diary (Japanese): [subtech]( http://subtech.g.hatena.ne.jp/cho45/ )\n\n",
  "readmeFilename": "README.markdown",
  "_id": "jsdeferred@0.4.0",
  "_from": "jsdeferred@*"
}
